Microsoft (R) Macro Assembler Version 14.29.30136.0	    01/21/22 04:50:47
_ReadKeyBoard.asm					     Page 1 - 1


				include ppball.inc
			      C include Irvine32.inc
			      C ; Include file for Irvine32.lib             (Irvine32.inc)
			      C 
			      C ;OPTION CASEMAP:NONE		; optional: make identifiers case-sensitive
			      C 
			      C INCLUDE SmallWin.inc		; MS-Windows prototypes, structures, and constants
			      C .NOLIST
			      C .LIST
			      C 
			      C INCLUDE VirtualKeys.inc
			      C ; VirtualKeys.inc
			      C .NOLIST
			      C .LIST
			      C 
			      C 
			      C .NOLIST
			      C .LIST
			      C 
			      C include Macros.inc
			      C .NOLIST
			      C .LIST
			      C 
			      C 
			      C MenuPage proto,
			      C 	colorTitle: dword,
			      C 	colorText: dword
			      C 
			      C ReadKeyBoard proto,
			      C     color: dword,
			      C 	color2: dword,
			      C 	p1X: PTR dword,						; 玩家一 x座標
			      C 	p1Y: PTR dword,						; 玩家一 y座標
			      C 	p2X: PTR dword,						; 玩家二 x座標
			      C 	p2Y: PTR dword,						; 玩家二 y座標
			      C 	paddleHeight: dword,				;5
			      C 	playTopEdge: dword,
			      C 	playLowEdge: dword,
			      C 	spaceWithStar: ptr byte				;"*"
			      C 
			      C ShowFirstTwoPaddles proto,
			      C     color: dword,
			      C 	color2: dword,
			      C 	blackX1: dword,						;PLAY_BLACK_X1
			      C 	blackY1: dword,						;PLAY_BLACK_Y1
			      C 	blackX2: dword,						;PLAY_BLACK_X2
			      C 	blackY2: dword,						;PLAY_BLACK_Y2
			      C 	p1X: PTR dword,						; 玩家一 x座標
			      C 	p1Y: PTR dword,						; 玩家一 y座標
			      C 	p2X: PTR dword,						; 玩家二 x座標
			      C 	p2Y: PTR dword,						; 玩家二 y座標
			      C 	paddleHeight: dword,                ;paddle 高度
			      C     spaceWithStar: ptr byte				;"*"
			      C 
			      C DrawFrame proto,
			      C     color: dword,						;UP_DOWN_B_COLOR 設light gray
			      C     playTopEdgeOffset: dword,			;PLAY_T_EDGE_OFFSET 
			      C 	playLeftEdgeOffset: dword,			;PLAY_L_EDGE_OFFSET
			      C     boardRowLength: dword,				;BOARD_R_LENGTH
			      C 	boardsinBetween: dword,				;BOARD_BETWEEN
			      C 	boardColumnLength: dword,			;BOARD_C_LENGTH
			      C 	space: ptr byte
			      C 
			      C DrawBall proto,
			      C      color: dword,
			      C      Ball_X: ptr dword,
			      C      Ball_Y: ptr dword,
			      C      xRun: ptr dword,
			      C 	yRise: ptr dword
			      C 
			      C  Ball proto,
			      C     Ball_X: ptr dword,			;球X座標
			      C     Ball_Y: ptr dword,			;球Y座標
			      C     color: dword,				;BALL_COLOR
			      C     xRun: ptr dword,
			      C 	yRise: ptr dword,
			      C 	space: ptr byte,
			      C 	playTopEdgeOffset: dword,
			      C 	boardsinBetween: dword,
			      C     p1X: dword,
			      C     p1Y: dword,
			      C     p2X: dword,
			      C     p2Y: dword,
			      C 	paddleHeight: dword,
			      C 	RESET_BALL_RATE: dword
			      C 	
			      C ResetBall proto,
			      C 	Ball_X: ptr dword,
			      C 	Ball_Y: ptr dword,
			      C 	newBall_X: dword,
			      C 	newBall_Y: dword,
			      C 	xRun: ptr dword,
			      C 	yRise: ptr dword,
			      C 	RESET_BALL_RATE: ptr dword
			      C  
			      C SpeedOfBall proto,
			      C      timedu: dword
			      C 
			      C 
			      C NewBallTime proto,
			      C 	revive: dword
			      C 
 00000000			.data
				            
 00000000 B9 43 C0 B8 BE	HintTitle BYTE "遊戲操作方法",0
	   DE A7 40 A4 E8
	   AA 6B 00
 0000000D A5 AA B0 BC AA	HintText  BYTE "左側玩家操控WS鍵來移動Paddle；          "
	   B1 AE 61 BE DE
	   B1 B1 57 53 C1
	   E4 A8 D3 B2 BE
	   B0 CA 50 61 64
	   64 6C 65 A1 46
	   20 20 20 20 20
	   20 20 20 20 20
 00000035  A5 6B B0 BC AA		       BYTE "右側玩家操控上下鍵來移動Paddle",0
	   B1 AE 61 BE DE
	   B1 B1 A4 57 A4
	   55 C1 E4 A8 D3
	   B2 BE B0 CA 50
	   61 64 64 6C 65
	   00

 00000000			.code 
 00000000			ReadKeyBoard proc,
				     color: dword,
				    color2: dword,
					p1X: PTR dword,						; 玩家一 x座標
					p1Y: PTR dword,						; 玩家一 y座標
					p2X: PTR dword,						; 玩家二 x座標
					p2Y: PTR dword,						; 玩家二 y座標
					paddleHeight: dword,                ;5
					playTopEdge: dword,                 ;最上座標
					playLowEdge: dword,                 ;最下座標
				    spaceWithStar: ptr byte				;"*"
				    
 00000003  60			    pushad
					
 00000004  E8 00000000 E	     call ReadKey
 00000009  0F 84 000001AB	     je continueN

 0000000F  3C 77		     cmp al, "w"
 00000011  74 1B		     je MoveUpP1                ;p1 paddle向上
 00000013  3C 73		     cmp al, "s"
 00000015  74 76		     je MoveDownP1              ;p2 paddle向下
				     
 00000017  80 FC 48		     cmp ah, 48h                ;向上鍵
 0000001A  0F 84 000000CD	     je MoveUpP2                ;p2 paddle向上
 00000020  80 FC 50		     cmp ah, 50h                ;向下鍵
 00000023  0F 84 00000120	     je MoveDownP2              ;p2 paddle向下

 00000029  E9 0000018C		     jmp continueN

				;藍色板板有MoveUpP1, MoveDownP1兩個label
 0000002E			MoveUpP1: 
				    ;當板子碰到上border，不給動(cont.)
				    ; eax = p1Y , [ebx] 存著當時的y座標!!!!
 0000002E  8B 5D 14		    mov ebx, p1Y
 00000031  8B 03			mov eax, [ebx]
 00000033  2B 45 20			sub eax, [paddleHeight]				; y - height
 00000036  3B 45 24			cmp eax, playTopEdge                ;如果小於等於
 00000039  0F 86 0000017B		jbe continueN                       ;跳continue, 忽略上鍵要求

				    ;往上移動時，覆蓋最下面的"*",抓當時的XY座標
				    ;因為我們是由下往上畫，所以當時的座標會是最下方
 0000003F  8B 45 10		     mov eax, p1X
 00000042  8A 10		     mov dl, byte PTR [eax]                  ; x 座標
 00000044  8B 45 14		     mov eax, p1Y
 00000047  8A 30		     mov dh, byte PTR [eax]                  ; y 座標
 00000049  E8 00000000 E	     call Gotoxy
 0000004E  B8 00000000		     mov eax, 0                              ; 塗上黑色
 00000053  E8 00000000 E	     call SetTextColor
 00000058  8B 55 2C		     mov edx, spaceWithStar
 0000005B  E8 00000000 E	     call WriteString                        ; 覆蓋

				     ;向上移動時，除了要擦去下面，也要新增上方"*"
 00000060  8B 45 10		     mov eax, p1X
 00000063  8A 10		     mov dl, byte PTR [eax]                  ; x 座標
 00000065  8B 45 14		     mov eax, p1Y
 00000068  8A 30		     mov dh, byte PTR [eax]                  ; y 座標
 0000006A  2A 75 20		     sub dh, byte PTR [paddleHeight]         ;減去paddle高度得最高點座標
 0000006D  E8 00000000 E	     call Gotoxy
 00000072  8B 45 08		     mov eax, color                          ;藍色板板~~
 00000075  E8 00000000 E	     call SetTextColor
 0000007A  8B 55 2C		     mov edx, spaceWithStar
 0000007D  E8 00000000 E	     call WriteString                        ; 畫上

				     ;[ebx]開頭存著當時的y座標
 00000082  81 2B 00000001	     sub [ebx], dword PTR 1                  ;[ebx]-1 得新座標
 00000088  E9 0000012D		     jmp continueN

 0000008D			MoveDownP1:
				    ;當板子碰到下border，不給動(cont.)
				    ; eax = p1Y , [ebx] 也存著當時的y座標!!!!
 0000008D  8B 5D 14		     mov ebx, p1Y
 00000090  8B 03			 mov eax, [ebx]
 00000092  40			     inc eax                                ;p1Y + 1來和最底Y座標進行比較
 00000093  3B 45 28			 cmp eax, playLowEdge                   ;如果Y座標大於等於Edge
 00000096  0F 83 0000011E		 jae continueN                          ;跳去continueN, 忽略下鍵要求

				     ;往下移動時，覆蓋最上面的"*",抓當時的XY座標
				     ;因為我們是由下往上畫，所以當時的座標會是最下方
 0000009C  8B 45 10		     mov eax, p1X
 0000009F  8A 10		     mov dl, byte PTR [eax]                  ; x 座標
 000000A1  8B 45 14		     mov eax, p1Y
 000000A4  8A 30		     mov dh, byte PTR [eax]                  ; y 座標
 000000A6  2A 75 20		     sub dh, byte PTR [paddleHeight]         ;減去paddle高度得最高點座標
 000000A9  80 C6 01		     add dh, byte PTR 1                      ;記得加一!!                      
 000000AC  E8 00000000 E	     call Gotoxy
 000000B1  B8 00000000		     mov eax, 0                              ; 塗上黑色
 000000B6  E8 00000000 E	     call SetTextColor                       
 000000BB  8B 55 2C		     mov edx, spaceWithStar
 000000BE  E8 00000000 E	     call WriteString                        ; 覆蓋最上面的*

				     ;向下移動時，除了要擦去上面，也要新增下方"*"
 000000C3  8B 45 10		     mov eax, p1X
 000000C6  8A 10		     mov dl, byte PTR [eax]                  ; x 座標
 000000C8  8B 45 14		     mov eax, p1Y
 000000CB  8A 30		     mov dh, byte PTR [eax]                  ; y 座標
				     ;add dh, byte PTR 1                      ;加一高度得最低點座標
 000000CD  E8 00000000 E	     call Gotoxy
 000000D2  8B 45 08		     mov eax, color                          ; 藍色板板
 000000D5  E8 00000000 E	     call SetTextColor
 000000DA  8B 55 2C		     mov edx, spaceWithStar
 000000DD  E8 00000000 E	     call WriteString                        ; 畫上

 000000E2  81 03 00000001	     add [ebx], dword PTR 1                  ;[ebx]+1 得新座標
 000000E8  E9 000000CD		     jmp continueN

				;紅色板板有MoveUpP2, MoveDownP2兩個label
 000000ED			MoveUpP2:
				    ;當板子碰到上border，不給動(cont.)
				    ; eax = p2Y , [ebx] 存著當時的y座標!!!!
 000000ED  8B 5D 1C		    mov ebx, p2Y
 000000F0  8B 03			mov eax, [ebx]                      
 000000F2  2B 45 20			sub eax, [paddleHeight]				     ; y - height
 000000F5  3B 45 24			cmp eax, playTopEdge                     ;如果小於等於
 000000F8  0F 86 000000BC		jbe continueN                            ;跳continue, 忽略上鍵要求

				    ;往上移動時，覆蓋最下面的"*",抓當時的XY座標
				    ;因為我們是由下往上畫，所以當時的座標會是最下方
 000000FE  8B 45 18		    mov eax, p2X
 00000101  8A 10		    mov dl, byte PTR [eax]                   ; x 座標
 00000103  8B 45 1C		    mov eax, p2Y
 00000106  8A 30		    mov dh, byte PTR [eax]                   ; y 座標
 00000108  E8 00000000 E	    call Gotoxy
 0000010D  B8 00000000		    mov eax, 0                               ; 塗上黑色
 00000112  E8 00000000 E	    call SetTextColor
 00000117  8B 55 2C		    mov edx, spaceWithStar
 0000011A  E8 00000000 E	    call WriteString                         ; 覆蓋

				    ;向上移動時，除了要擦去下面，也要新增上方"*"
 0000011F  8B 45 18		    mov eax, p2X
 00000122  8A 10		    mov dl, byte PTR [eax]                  ; x 座標
 00000124  8B 45 1C		    mov eax, p2Y
 00000127  8A 30		    mov dh, byte PTR [eax]                  ; y 座標
 00000129  2A 75 20		    sub dh, byte PTR [paddleHeight]         ;減去paddle高度得最高點座標
 0000012C  E8 00000000 E	    call Gotoxy
 00000131  8B 45 0C		    mov eax, color2                         ; 紅色板板
 00000134  E8 00000000 E	    call SetTextColor
 00000139  8B 55 2C		    mov edx, spaceWithStar
 0000013C  E8 00000000 E	    call WriteString                        ; 補*

				    ;[ebx]開頭存著當時的y座標
 00000141  81 2B 00000001	    sub [ebx], dword PTR 1                  ;[ebx]-1 得新座標
 00000147  EB 71		    jmp continueN

 00000149			MoveDownP2:
				    ;當板子碰到下border，不給動(cont.)
				    ; eax = p1Y , [ebx] 也存著當時的y座標!!!!
 00000149  8B 5D 1C		    mov ebx, p2Y
 0000014C  8B 03			mov eax, [ebx]
 0000014E  40			    inc eax                                 ;p2Y + 1來和最底Y座標進行比較
 0000014F  3B 45 28			cmp eax, playLowEdge                    ;如果Y座標大於等於Edge
 00000152  73 66			jae continueN                           ;跳去continueN, 忽略下鍵要求

				    ;往下移動時，覆蓋最上面的"*",抓當時的XY座標
				    ;因為我們是由下往上畫，所以當時的座標會是最下方
 00000154  8B 45 18		    mov eax, p2X
 00000157  8A 10		    mov dl, byte PTR [eax]                  ; x 座標
 00000159  8B 45 1C		    mov eax, p2Y
 0000015C  8A 30		    mov dh, byte PTR [eax]                  ; y 座標
 0000015E  2A 75 20		    sub dh, byte PTR [paddleHeight]         ;減去paddle高度得最高點座標
 00000161  80 C6 01		    add dh, byte PTR 1
 00000164  E8 00000000 E	    call Gotoxy
 00000169  B8 00000000		    mov eax, 0                              ; 塗上黑色
 0000016E  E8 00000000 E	    call SetTextColor
 00000173  8B 55 2C		    mov edx, spaceWithStar
 00000176  E8 00000000 E	    call WriteString                        ; 補黑色*

				    ;向下移動時，除了要擦去上面，也要新增下方"*"
 0000017B  8B 45 18		    mov eax, p2X
 0000017E  8A 10		    mov dl, byte PTR [eax]                  ; x 座標
 00000180  8B 45 1C		    mov eax, p2Y
 00000183  8A 30		    mov dh, byte PTR [eax]                  ; y 座標
 00000185  80 C6 01		    add dh, byte PTR 1                      ;加一高度得最低點座標
 00000188  E8 00000000 E	    call Gotoxy
 0000018D  8B 45 0C		    mov eax, color2                         ; 紅板板
 00000190  E8 00000000 E	    call SetTextColor
 00000195  8B 55 2C		    mov edx, spaceWithStar
 00000198  E8 00000000 E	    call WriteString                        ;補*

 0000019D  81 03 00000001	    add [ebx], dword PTR 1                  ;[ebx]+1 得新座標
 000001A3  EB 15		    jmp continueN

				; 提示操作
 000001A5			Hint:
					INVOKE MessageBox, NULL, ADDR HintText,
					  ADDR HintTitle, MB_OK
 000001B8  EB 00		    jmp continueN

 000001BA			continueN:
				    
				    mGotoxy 0,0         ;最終點設0,0
 000001BA  52		     1		push edx
 000001BB  B6 00	     1		mov  dh,0
 000001BD  B2 00	     1		mov  dl,0
 000001BF  E8 00000000 E     1		call Gotoxy
 000001C4  5A		     1		pop  edx
 000001C5  3C 68		    cmp al,"h"
 000001C7  74 DC		    je Hint
 000001C9  61			    popad
					ret
 000001CE			ReadKeyBoard endp
				end
Microsoft (R) Macro Assembler Version 14.29.30136.0	    01/21/22 04:50:47
_ReadKeyBoard.asm					     Symbols 2 - 1




Macros:

                N a m e                 Type

IsDefined  . . . . . . . . . . .	Func
Startup  . . . . . . . . . . . .	Proc
mDumpMem . . . . . . . . . . . .	Proc
mDump  . . . . . . . . . . . . .	Proc
mGotoxy  . . . . . . . . . . . .	Proc
mReadString  . . . . . . . . . .	Proc
mShowRegister  . . . . . . . . .	Proc
mShow  . . . . . . . . . . . . .	Proc
mWriteLn . . . . . . . . . . . .	Proc
mWriteSpace  . . . . . . . . . .	Proc
mWriteString . . . . . . . . . .	Proc
mWrite . . . . . . . . . . . . .	Proc


Structures and Unions:

                N a m e                  Size
                                         Offset      Type

CONSOLE_CURSOR_INFO  . . . . . .	 00000008
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  bVisible . . . . . . . . . . .	 00000004	 DWord
CONSOLE_SCREEN_BUFFER_INFO . . .	 00000016
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCursorPosition . . . . . . .	 00000004	 DWord
  wAttributes  . . . . . . . . .	 00000008	 Word
  srWindow . . . . . . . . . . .	 0000000A	 QWord
  dwMaximumWindowSize  . . . . .	 00000012	 DWord
COORD  . . . . . . . . . . . . .	 00000004
  X  . . . . . . . . . . . . . .	 00000000	 Word
  Y  . . . . . . . . . . . . . .	 00000002	 Word
FILETIME . . . . . . . . . . . .	 00000008
  loDateTime . . . . . . . . . .	 00000000	 DWord
  hiDateTime . . . . . . . . . .	 00000004	 DWord
FOCUS_EVENT_RECORD . . . . . . .	 00000004
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
FPU_ENVIRON  . . . . . . . . . .	 0000001C
  controlWord  . . . . . . . . .	 00000000	 Word
  statusWord . . . . . . . . . .	 00000004	 Word
  tagWord  . . . . . . . . . . .	 00000008	 Word
  instrPointerOffset . . . . . .	 0000000C	 DWord
  instrPointerSelector . . . . .	 00000010	 DWord
  operandPointerOffset . . . . .	 00000014	 DWord
  operandPointerSelector . . . .	 00000018	 Word
INPUT_RECORD . . . . . . . . . .	 00000014
  EventType  . . . . . . . . . .	 00000000	 Word
  Event  . . . . . . . . . . . .	 00000004	 XmmWord
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCommandId  . . . . . . . . .	 00000000	 DWord
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
KEY_EVENT_RECORD . . . . . . . .	 00000010
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
MENU_EVENT_RECORD  . . . . . . .	 00000004
  dwCommandId  . . . . . . . . .	 00000000	 DWord
MOUSE_EVENT_RECORD . . . . . . .	 00000010
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
SMALL_RECT . . . . . . . . . . .	 00000008
  Left . . . . . . . . . . . . .	 00000000	 Word
  Top  . . . . . . . . . . . . .	 00000002	 Word
  Right  . . . . . . . . . . . .	 00000004	 Word
  Bottom . . . . . . . . . . . .	 00000006	 Word
SYSTEMTIME . . . . . . . . . . .	 00000010
  wYear  . . . . . . . . . . . .	 00000000	 Word
  wMonth . . . . . . . . . . . .	 00000002	 Word
  wDayOfWeek . . . . . . . . . .	 00000004	 Word
  wDay . . . . . . . . . . . . .	 00000006	 Word
  wHour  . . . . . . . . . . . .	 00000008	 Word
  wMinute  . . . . . . . . . . .	 0000000A	 Word
  wSecond  . . . . . . . . . . .	 0000000C	 Word
  wMilliseconds  . . . . . . . .	 0000000E	 Word
WINDOW_BUFFER_SIZE_RECORD  . . .	 00000004
  dwSize . . . . . . . . . . . .	 00000000	 DWord


Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

FLAT . . . . . . . . . . . . . .	GROUP
STACK  . . . . . . . . . . . . .	32 Bit	 00001000 Para	  Stack	  'STACK'	 
_DATA  . . . . . . . . . . . . .	32 Bit	 00000054 Para	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 000001CE Para	  Public  'CODE'	


Procedures, parameters, and locals:

                N a m e                 Type     Value    Attr

Ball . . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CloseFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CloseHandle  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Clrscr . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateFileA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateOutputFile . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Crlf . . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Delay  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DrawBall . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DrawFrame  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpMem  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpRegs . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ExitProcess  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToDosDateTime  . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToSystemTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FlushConsoleInputBuffer  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FormatMessageA . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandLineA  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandTail . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCP . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleScreenBufferInfo . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetDateTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetFileTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetKeyState  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLastError . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMaxXY . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMseconds  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetNumberOfConsoleInputEvents  .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetProcessHeap . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetStdHandle . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetSystemTime  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTickCount . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Gotoxy . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapAlloc  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapCreate . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapDestroy  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapFree . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapSize . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
IsDigit  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
LocalFree  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MenuPage . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MessageBoxA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MsgBoxAsk  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MsgBox . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
NewBallTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
OpenInputFile  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ParseDecimal32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ParseInteger32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
PeekConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Random32 . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
RandomRange  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Randomize  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadChar . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleA . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadDec  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFile . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFloat  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFromFile . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadHex  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadInt  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKeyBoard . . . . . . . . . .	P Near	 00000000 _TEXT	Length= 000001CE Public STDCALL
  color  . . . . . . . . . . . .	DWord	 bp + 00000008
  color2 . . . . . . . . . . . .	DWord	 bp + 0000000C
  p1X  . . . . . . . . . . . . .	DWord	 bp + 00000010
  p1Y  . . . . . . . . . . . . .	DWord	 bp + 00000014
  p2X  . . . . . . . . . . . . .	DWord	 bp + 00000018
  p2Y  . . . . . . . . . . . . .	DWord	 bp + 0000001C
  paddleHeight . . . . . . . . .	DWord	 bp + 00000020
  playTopEdge  . . . . . . . . .	DWord	 bp + 00000024
  playLowEdge  . . . . . . . . .	DWord	 bp + 00000028
  spaceWithStar  . . . . . . . .	DWord	 bp + 0000002C
  MoveUpP1 . . . . . . . . . . .	L Near	 0000002E _TEXT	
  MoveDownP1 . . . . . . . . . .	L Near	 0000008D _TEXT	
  MoveUpP2 . . . . . . . . . . .	L Near	 000000ED _TEXT	
  MoveDownP2 . . . . . . . . . .	L Near	 00000149 _TEXT	
  Hint . . . . . . . . . . . . .	L Near	 000001A5 _TEXT	
  continueN  . . . . . . . . . .	L Near	 000001BA _TEXT	
ReadKeyFlush . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKey  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadString . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ResetBall  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorPosition . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleScreenBufferSize . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTextAttribute  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTitleA . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleWindowInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetFilePointer . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ShowFPUStack . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ShowFirstTwoPaddles  . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Sleep  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SpeedOfBall  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
StrLength  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_compare  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_copy . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_length . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_trim . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_ucase  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SystemTimeToFileTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WaitMsg  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBinB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBin . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteChar  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleA  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputAttribute  . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputCharacterA . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteDec . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFloat . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHexB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHex . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteInt . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrameName  . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrame  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteString  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteToFile  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteWindowsMsg  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
printf . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
scanf  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
wsprintfA  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000003h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
ALT_MASK . . . . . . . . . . . .	Number	 00000003h   
CAPSLOCK_ON  . . . . . . . . . .	Number	 00000080h   
CREATE_ALWAYS  . . . . . . . . .	Number	 00000002h   
CREATE_NEW . . . . . . . . . . .	Number	 00000001h   
CTRL_MASK  . . . . . . . . . . .	Number	 0000000Ch   
CreateFile . . . . . . . . . . .	Text   	 CreateFileA
DO_NOT_SHARE . . . . . . . . . .	Number	 00000000h   
ENABLE_ECHO_INPUT  . . . . . . .	Number	 00000004h   
ENABLE_LINE_INPUT  . . . . . . .	Number	 00000002h   
ENABLE_MOUSE_INPUT . . . . . . .	Number	 00000010h   
ENABLE_PROCESSED_INPUT . . . . .	Number	 00000001h   
ENABLE_PROCESSED_OUTPUT  . . . .	Number	 00000001h   
ENABLE_WINDOW_INPUT  . . . . . .	Number	 00000008h   
ENABLE_WRAP_AT_EOL_OUTPUT  . . .	Number	 00000002h   
ENHANCED_KEY . . . . . . . . . .	Number	 00000100h   
FALSE  . . . . . . . . . . . . .	Number	 00000000h   
FILE_APPEND_DATA . . . . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_ARCHIVE . . . . .	Number	 00000020h   
FILE_ATTRIBUTE_COMPRESSED  . . .	Number	 00000800h   
FILE_ATTRIBUTE_DEVICE  . . . . .	Number	 00000040h   
FILE_ATTRIBUTE_DIRECTORY . . . .	Number	 00000010h   
FILE_ATTRIBUTE_ENCRYPTED . . . .	Number	 00004000h   
FILE_ATTRIBUTE_HIDDEN  . . . . .	Number	 00000002h   
FILE_ATTRIBUTE_NORMAL  . . . . .	Number	 00000080h   
FILE_ATTRIBUTE_NOT_CONTENT_INDEXED .	Number	 00002000h   
FILE_ATTRIBUTE_OFFLINE . . . . .	Number	 00001000h   
FILE_ATTRIBUTE_READONLY  . . . .	Number	 00000001h   
FILE_ATTRIBUTE_REPARSE_POINT . .	Number	 00000400h   
FILE_ATTRIBUTE_SPARSE_FILE . . .	Number	 00000200h   
FILE_ATTRIBUTE_SYSTEM  . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_TEMPORARY . . . .	Number	 00000100h   
FILE_BEGIN . . . . . . . . . . .	Number	 00000000h   
FILE_CURRENT . . . . . . . . . .	Number	 00000001h   
FILE_DELETE_CHILD  . . . . . . .	Number	 00000040h   
FILE_END . . . . . . . . . . . .	Number	 00000002h   
FILE_READ_DATA . . . . . . . . .	Number	 00000001h   
FILE_SHARE_DELETE  . . . . . . .	Number	 00000004h   
FILE_SHARE_READ  . . . . . . . .	Number	 00000001h   
FILE_SHARE_WRITE . . . . . . . .	Number	 00000002h   
FILE_WRITE_DATA  . . . . . . . .	Number	 00000002h   
FOCUS_EVENT  . . . . . . . . . .	Number	 00000010h   
FORMAT_MESSAGE_ALLOCATE_BUFFER .	Number	 00000100h   
FORMAT_MESSAGE_FROM_SYSTEM . . .	Number	 00001000h   
FormatMessage  . . . . . . . . .	Text   	 FormatMessageA
GENERIC_ALL  . . . . . . . . . .	Number	 10000000h   
GENERIC_EXECUTE  . . . . . . . .	Number	 20000000h   
GENERIC_READ . . . . . . . . . .	Number	 -80000000h   
GENERIC_WRITE  . . . . . . . . .	Number	 40000000h   
GetCommandLine . . . . . . . . .	Text   	 GetCommandLineA
HANDLE . . . . . . . . . . . . .	Text   	 DWORD
HEAP_GENERATE_EXCEPTIONS . . . .	Number	 00000004h   
HEAP_GROWABLE  . . . . . . . . .	Number	 00000002h   
HEAP_NO_SERIALIZE  . . . . . . .	Number	 00000001h   
HEAP_REALLOC_IN_PLACE_ONLY . . .	Number	 00000010h   
HEAP_ZERO_MEMORY . . . . . . . .	Number	 00000008h   
HintText . . . . . . . . . . . .	Byte	 0000000D _DATA	
HintTitle  . . . . . . . . . . .	Byte	 00000000 _DATA	
IDABORT  . . . . . . . . . . . .	Number	 00000003h   
IDCANCEL . . . . . . . . . . . .	Number	 00000002h   
IDCLOSE  . . . . . . . . . . . .	Number	 00000008h   
IDCONTINUE . . . . . . . . . . .	Number	 0000000Bh   
IDHELP . . . . . . . . . . . . .	Number	 00000009h   
IDIGNORE . . . . . . . . . . . .	Number	 00000005h   
IDNO . . . . . . . . . . . . . .	Number	 00000007h   
IDOK . . . . . . . . . . . . . .	Number	 00000001h   
IDRETRY  . . . . . . . . . . . .	Number	 00000004h   
IDTIMEOUT  . . . . . . . . . . .	Number	 00007D00h   
IDTRYAGAIN . . . . . . . . . . .	Number	 0000000Ah   
IDYES  . . . . . . . . . . . . .	Number	 00000006h   
INVALID_HANDLE_VALUE . . . . . .	Number	 -00000001h   
KBDOWN_FLAG  . . . . . . . . . .	Number	 00000001h   
KEY_EVENT  . . . . . . . . . . .	Number	 00000001h   
KEY_MASKS  . . . . . . . . . . .	Number	 0000001Fh   
LEFT_ALT_PRESSED . . . . . . . .	Number	 00000002h   
LEFT_CTRL_PRESSED  . . . . . . .	Number	 00000008h   
MB_ABORTRETRYIGNORE  . . . . . .	Number	 00000002h   
MB_APPLMODAL . . . . . . . . . .	Number	 00000000h   
MB_CANCELTRYCONTINUE . . . . . .	Number	 00000006h   
MB_DEFBUTTON1  . . . . . . . . .	Number	 00000000h   
MB_DEFBUTTON2  . . . . . . . . .	Number	 00000100h   
MB_DEFBUTTON3  . . . . . . . . .	Number	 00000200h   
MB_DEFBUTTON4  . . . . . . . . .	Number	 00000300h   
MB_HELP  . . . . . . . . . . . .	Number	 00004000h   
MB_ICONASTERISK  . . . . . . . .	Number	 00000040h   
MB_ICONERROR . . . . . . . . . .	Number	 00000010h   
MB_ICONEXCLAMATION . . . . . . .	Number	 00000030h   
MB_ICONHAND  . . . . . . . . . .	Number	 00000010h   
MB_ICONINFORMATION . . . . . . .	Number	 00000040h   
MB_ICONQUESTION  . . . . . . . .	Number	 00000020h   
MB_ICONSTOP  . . . . . . . . . .	Number	 00000010h   
MB_ICONWARNING . . . . . . . . .	Number	 00000030h   
MB_OKCANCEL  . . . . . . . . . .	Number	 00000001h   
MB_OK  . . . . . . . . . . . . .	Number	 00000000h   
MB_RETRYCANCEL . . . . . . . . .	Number	 00000005h   
MB_SYSTEMMODAL . . . . . . . . .	Number	 00001000h   
MB_TASKMODAL . . . . . . . . . .	Number	 00002000h   
MB_USERICON  . . . . . . . . . .	Number	 00000080h   
MB_YESNOCANCEL . . . . . . . . .	Number	 00000003h   
MB_YESNO . . . . . . . . . . . .	Number	 00000004h   
MENU_EVENT . . . . . . . . . . .	Number	 00000008h   
MOUSE_EVENT  . . . . . . . . . .	Number	 00000002h   
MessageBox . . . . . . . . . . .	Text   	 MessageBoxA
NULL . . . . . . . . . . . . . .	Number	 00000000h   
NUMLOCK_ON . . . . . . . . . . .	Number	 00000020h   
OPEN_ALWAYS  . . . . . . . . . .	Number	 00000004h   
OPEN_EXISTING  . . . . . . . . .	Number	 00000003h   
PeekConsoleInput . . . . . . . .	Text   	 PeekConsoleInputA
RIGHT_ALT_PRESSED  . . . . . . .	Number	 00000001h   
RIGHT_CTRL_PRESSED . . . . . . .	Number	 00000004h   
ReadConsoleInput . . . . . . . .	Text   	 ReadConsoleInputA
ReadConsole  . . . . . . . . . .	Text   	 ReadConsoleA
SCROLLLOCK_ON  . . . . . . . . .	Number	 00000040h   
SHIFT_MASK . . . . . . . . . . .	Number	 00000010h   
SHIFT_PRESSED  . . . . . . . . .	Number	 00000010h   
STD_ERROR_HANDLE . . . . . . . .	Number	 -0000000Ch   
STD_INPUT_HANDLE . . . . . . . .	Number	 -0000000Ah   
STD_OUTPUT_HANDLE  . . . . . . .	Number	 -0000000Bh   
SetConsoleTitle  . . . . . . . .	Text   	 SetConsoleTitleA
TAB  . . . . . . . . . . . . . .	Number	 00000009h   
TRUE . . . . . . . . . . . . . .	Number	 00000001h   
TRUNCATE_EXISTING  . . . . . . .	Number	 00000005h   
VK_11  . . . . . . . . . . . . .	Number	 000000BDh   
VK_12  . . . . . . . . . . . . .	Number	 000000BBh   
VK_ADD . . . . . . . . . . . . .	Number	 0000006Bh   
VK_BACK  . . . . . . . . . . . .	Number	 00000008h   
VK_CANCEL  . . . . . . . . . . .	Number	 00000003h   
VK_CAPITAL . . . . . . . . . . .	Number	 00000014h   
VK_CLEAR . . . . . . . . . . . .	Number	 0000000Ch   
VK_CONTROL . . . . . . . . . . .	Number	 00000011h   
VK_DECIMAL . . . . . . . . . . .	Number	 0000006Eh   
VK_DELETE  . . . . . . . . . . .	Number	 0000002Eh   
VK_DIVIDE  . . . . . . . . . . .	Number	 0000006Fh   
VK_DOWN  . . . . . . . . . . . .	Number	 00000028h   
VK_END . . . . . . . . . . . . .	Number	 00000023h   
VK_ESCAPE  . . . . . . . . . . .	Number	 0000001Bh   
VK_EXECUTE . . . . . . . . . . .	Number	 0000002Bh   
VK_F10 . . . . . . . . . . . . .	Number	 00000079h   
VK_F11 . . . . . . . . . . . . .	Number	 0000007Ah   
VK_F12 . . . . . . . . . . . . .	Number	 0000007Bh   
VK_F13 . . . . . . . . . . . . .	Number	 0000007Ch   
VK_F14 . . . . . . . . . . . . .	Number	 0000007Dh   
VK_F15 . . . . . . . . . . . . .	Number	 0000007Eh   
VK_F16 . . . . . . . . . . . . .	Number	 0000007Fh   
VK_F17 . . . . . . . . . . . . .	Number	 00000080h   
VK_F18 . . . . . . . . . . . . .	Number	 00000081h   
VK_F19 . . . . . . . . . . . . .	Number	 00000082h   
VK_F1  . . . . . . . . . . . . .	Number	 00000070h   
VK_F20 . . . . . . . . . . . . .	Number	 00000083h   
VK_F21 . . . . . . . . . . . . .	Number	 00000084h   
VK_F22 . . . . . . . . . . . . .	Number	 00000085h   
VK_F23 . . . . . . . . . . . . .	Number	 00000086h   
VK_F24 . . . . . . . . . . . . .	Number	 00000087h   
VK_F2  . . . . . . . . . . . . .	Number	 00000071h   
VK_F3  . . . . . . . . . . . . .	Number	 00000072h   
VK_F4  . . . . . . . . . . . . .	Number	 00000073h   
VK_F5  . . . . . . . . . . . . .	Number	 00000074h   
VK_F6  . . . . . . . . . . . . .	Number	 00000075h   
VK_F7  . . . . . . . . . . . . .	Number	 00000076h   
VK_F8  . . . . . . . . . . . . .	Number	 00000077h   
VK_F9  . . . . . . . . . . . . .	Number	 00000078h   
VK_HELP  . . . . . . . . . . . .	Number	 0000002Fh   
VK_HOME  . . . . . . . . . . . .	Number	 00000024h   
VK_INSERT  . . . . . . . . . . .	Number	 0000002Dh   
VK_LBUTTON . . . . . . . . . . .	Number	 00000001h   
VK_LCONTROL  . . . . . . . . . .	Number	 000000A2h   
VK_LEFT  . . . . . . . . . . . .	Number	 00000025h   
VK_LMENU . . . . . . . . . . . .	Number	 000000A4h   
VK_LSHIFT  . . . . . . . . . . .	Number	 000000A0h   
VK_MENU  . . . . . . . . . . . .	Number	 00000012h   
VK_MULTIPLY  . . . . . . . . . .	Number	 0000006Ah   
VK_NEXT  . . . . . . . . . . . .	Number	 00000022h   
VK_NUMLOCK . . . . . . . . . . .	Number	 00000090h   
VK_NUMPAD0 . . . . . . . . . . .	Number	 00000060h   
VK_NUMPAD1 . . . . . . . . . . .	Number	 00000061h   
VK_NUMPAD2 . . . . . . . . . . .	Number	 00000062h   
VK_NUMPAD3 . . . . . . . . . . .	Number	 00000063h   
VK_NUMPAD4 . . . . . . . . . . .	Number	 00000064h   
VK_NUMPAD5 . . . . . . . . . . .	Number	 00000065h   
VK_NUMPAD6 . . . . . . . . . . .	Number	 00000066h   
VK_NUMPAD7 . . . . . . . . . . .	Number	 00000067h   
VK_NUMPAD8 . . . . . . . . . . .	Number	 00000068h   
VK_NUMPAD9 . . . . . . . . . . .	Number	 00000069h   
VK_PAUSE . . . . . . . . . . . .	Number	 00000013h   
VK_PRINT . . . . . . . . . . . .	Number	 0000002Ah   
VK_PRIOR . . . . . . . . . . . .	Number	 00000021h   
VK_RBUTTON . . . . . . . . . . .	Number	 00000002h   
VK_RCONTROL  . . . . . . . . . .	Number	 000000A3h   
VK_RETURN  . . . . . . . . . . .	Number	 0000000Dh   
VK_RIGHT . . . . . . . . . . . .	Number	 00000027h   
VK_RMENU . . . . . . . . . . . .	Number	 000000A5h   
VK_RSHIFT  . . . . . . . . . . .	Number	 000000A1h   
VK_SCROLL  . . . . . . . . . . .	Number	 00000091h   
VK_SEPARATER . . . . . . . . . .	Number	 0000006Ch   
VK_SHIFT . . . . . . . . . . . .	Number	 00000010h   
VK_SNAPSHOT  . . . . . . . . . .	Number	 0000002Ch   
VK_SPACE . . . . . . . . . . . .	Number	 00000020h   
VK_SUBTRACT  . . . . . . . . . .	Number	 0000006Dh   
VK_TAB . . . . . . . . . . . . .	Number	 00000009h   
VK_UP  . . . . . . . . . . . . .	Number	 00000026h   
WINDOW_BUFFER_SIZE_EVENT . . . .	Number	 00000004h   
WriteConsoleOutputCharacter  . .	Text   	 WriteConsoleOutputCharacterA
WriteConsole . . . . . . . . . .	Text   	 WriteConsoleA
black  . . . . . . . . . . . . .	Number	 00000000h   
blue . . . . . . . . . . . . . .	Number	 00000001h   
brown  . . . . . . . . . . . . .	Number	 00000006h   
cyan . . . . . . . . . . . . . .	Number	 00000003h   
exit . . . . . . . . . . . . . .	Text   	 INVOKE ExitProcess,0
gray . . . . . . . . . . . . . .	Number	 00000008h   
green  . . . . . . . . . . . . .	Number	 00000002h   
lightBlue  . . . . . . . . . . .	Number	 00000009h   
lightCyan  . . . . . . . . . . .	Number	 0000000Bh   
lightGray  . . . . . . . . . . .	Number	 00000007h   
lightGreen . . . . . . . . . . .	Number	 0000000Ah   
lightMagenta . . . . . . . . . .	Number	 0000000Dh   
lightRed . . . . . . . . . . . .	Number	 0000000Ch   
magenta  . . . . . . . . . . . .	Number	 00000005h   
red  . . . . . . . . . . . . . .	Number	 00000004h   
white  . . . . . . . . . . . . .	Number	 0000000Fh   
wsprintf . . . . . . . . . . . .	Text   	 wsprintfA
yellow . . . . . . . . . . . . .	Number	 0000000Eh   

	   0 Warnings
	   0 Errors
